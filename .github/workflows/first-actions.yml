name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas sqlalchemy prefect pyodbc

    - name: Set up Prefect environment variables
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
      run: echo "Prefect environment variables set."

    - name: Build Prefect deployment
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
      id: build-deployment
      run: |
        prefect deployment build copyfilefromlocaltosql.py:file_movement_flow -n "Load Data to SQL Deployment"

    - name: Apply Prefect deployment
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
      run: |
        prefect deployment apply ./*.yaml

    - name: Start Prefect agent in the background
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
      run: |
        nohup prefect agent start --pool "default-agent-pool" > agent.log 2>&1 &

    - name: Run Prefect deployment and wait for completion
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
      run: |
        flow_run_output=$(prefect deployment run "Load Data to SQL/Load Data to SQL Deployment" --param file_path=./MYFILE.csv)
        echo "$flow_run_output"
        flow_run_id=$(echo "$flow_run_output" | grep -oP '(?<=UUID: )[a-f0-9-]+')
        if [ -z "$flow_run_id" ]; then
          echo "Failed to extract flow run ID."
          exit 1
        fi
        echo "Flow Run ID: $flow_run_id"

        # Wait for flow run to complete
        timeout=300
        interval=10
        elapsed=0
        while [ $elapsed -lt $timeout ]; do
          flow_run_status=$(prefect flow-run describe $flow_run_id --format json | jq -r '.state')
          echo "Flow run status: $flow_run_status"
          if [ "$flow_run_status" = "Completed" ]; then
            echo "Flow run completed successfully."
            break
          elif [ "$flow_run_status" = "Failed" ]; then
            echo "Flow run failed."
            exit 1
          fi
          sleep $interval
          elapsed=$((elapsed + interval))
        done

        if [ $elapsed -ge $timeout ]; then
          echo "Timeout waiting for flow run to complete."
          exit 1
        fi

    - name: Stop Prefect agent
      run: |
        pkill -f "prefect agent start"
